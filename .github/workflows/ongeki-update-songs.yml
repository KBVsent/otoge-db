name: "[Ongeki] Fetch new songs"

on:
  schedule:
    - cron: '0 0 * * THU'
  workflow_dispatch:

jobs:
  run_script_and_create_pr:
    name: Run script and create PR
    runs-on: ubuntu-latest

    steps:
      - name: Set timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Asia/Tokyo"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Configure Git user
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "GitHub Actions"

      - name: Checkout existing branch or create new
        run : |
          git fetch origin
          if git show-ref --quiet refs/heads/ongeki-staging; then
            git checkout \
                ongeki-staging \
                --track origin/ongeki-staging
          else
            git checkout -b ongeki-staging
          fi
          git pull --rebase origin master
          git push --force --set-upstream origin ongeki-staging

      - name: Run main script and capture output
        id: run_script
        run: |
          {
            echo "OUTPUT_LOG<<EOF"
            python scripts/update-songs.py --ongeki --nocolors --escape --skipwiki
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Extract datestamp from script output
        id: extract_date
        run: echo "datestamp=$(cat ongeki/data/music-ex.json | jq '.[-1].date | tonumber')" >> "$GITHUB_OUTPUT"

      - name: Check script output
        id: check_script
        run: |
          if [[ "${{ steps.run_script.outputs.OUTPUT_LOG }}" == *"New song added"* ]]; then
            echo "New song data downloaded. Creating a pull request."
            echo "CREATE_PR=true" >> "$GITHUB_OUTPUT"
          else
            echo "Nothing updated. Skipping pull request creation."
            echo "CREATE_PR=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit changes
        if: steps.check_script.outputs.CREATE_PR == 'true'
        env:
          UNIQUE_STRING: ${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          git add .
          git commit -m "[Automated] Ongeki: Add song data ${{ steps.extract_date.outputs.DATESTAMP }}"
          git push origin ongeki-staging

      - name: Checkout existing PR or create new
        if: steps.check_script.outputs.CREATE_PR == 'true'
        run: |
          if [[ $(gh pr list --state open --head ongeki-staging | grep ongeki-staging) ]]; then
            echo "PR currently open. Add comment to existing open PR"
            gh pr comment ongeki-staging \
              --body "${{ steps.run_script.outputs.OUTPUT_LOG }}"
          else
            echo "No currently open PR for ongeki-staging. Create new PR"
            gh pr create \
              -B ${{ github.ref_name }} \
              -H "ongeki-staging" \
              --title "[Automation] Ongeki: Update website with updated song data (${{ steps.extract_date.outputs.DATESTAMP }})" \
              --body "${{ steps.run_script.outputs.OUTPUT_LOG }}"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
